function FunctionDefinition_0 ( address Parameter_0 , bytes Parameter_1 ) internal { require ( Identifier_0 ( Identifier_1 ) ) ; assembly { let result := AssemblyExpression_5 ( AssemblyExpression_1 ( AssemblyExpression_0 , DecimalNumber_0 ) , AssemblyExpression_2 , add ( AssemblyExpression_3 , HexNumber_0 ) , mload ( AssemblyExpression_4 ) , 0 , 0 ) let Identifier_2 := AssemblyExpression_6 let Identifier_3 := mload ( HexNumber_1 ) AssemblyExpression_9 ( AssemblyExpression_7 , 0 , AssemblyExpression_8 ) switch AssemblyExpression_10 case 0 { AssemblyExpression_13 ( AssemblyExpression_11 , AssemblyExpression_12 ) } default { AssemblyExpression_16 ( AssemblyExpression_14 , AssemblyExpression_15 ) } } }