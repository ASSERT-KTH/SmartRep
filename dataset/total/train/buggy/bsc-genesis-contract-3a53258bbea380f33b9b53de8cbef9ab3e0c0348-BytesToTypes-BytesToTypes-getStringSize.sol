function FunctionDefinition_0 ( uint Parameter_0 , bytes memory Parameter_1 ) internal pure returns ( uint Parameter_2 ) { assembly { Identifier_0 := mload ( add ( AssemblyExpression_0 , AssemblyExpression_1 ) ) let Identifier_1 := add ( AssemblyExpression_3 ( AssemblyExpression_2 , DecimalNumber_0 ) , DecimalNumber_1 ) if AssemblyExpression_6 ( AssemblyExpression_5 ( AssemblyExpression_4 , DecimalNumber_2 ) , 0 ) { Identifier_2 := add ( AssemblyExpression_7 , DecimalNumber_3 ) } Identifier_3 := AssemblyExpression_9 ( AssemblyExpression_8 , DecimalNumber_4 ) } }