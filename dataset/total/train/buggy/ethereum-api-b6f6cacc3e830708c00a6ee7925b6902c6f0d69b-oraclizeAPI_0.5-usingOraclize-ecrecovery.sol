function FunctionDefinition_0 ( bytes32 Parameter_0 , bytes memory Parameter_1 ) internal returns ( bool , address ) { bytes32 VariableDeclaration_0 ; bytes32 VariableDeclaration_1 ; uint8 VariableDeclaration_2 ; if ( Identifier_0 . length != NumberLiteral_0 ) { return ( false , address ( 0 ) ) ; } assembly { r := mload ( add ( AssemblyExpression_0 , DecimalNumber_0 ) ) s := mload ( add ( AssemblyExpression_1 , DecimalNumber_1 ) ) v := AssemblyExpression_3 ( 0 , mload ( add ( AssemblyExpression_2 , DecimalNumber_2 ) ) ) } if ( v < NumberLiteral_1 ) { v += NumberLiteral_2 ; } if ( v != NumberLiteral_3 && v != NumberLiteral_4 ) { return ( false , address ( 0 ) ) ; } return Identifier_1 ( Identifier_2 , v , r , s ) ; }