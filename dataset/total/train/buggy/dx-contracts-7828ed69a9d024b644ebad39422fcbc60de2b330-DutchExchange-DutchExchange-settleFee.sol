function FunctionDefinition_0 ( address Parameter_0 , address Parameter_1 , uint Parameter_2 , address user , uint amount ) internal returns ( uint Parameter_3 ) { UserDefinedTypeName_0 memory VariableDeclaration_0 = Identifier_0 ( user ) ; uint VariableDeclaration_1 = amount * Identifier_1 . MemberAccess_0 / Identifier_2 . MemberAccess_1 ; if ( fee > 0 ) { uint VariableDeclaration_2 = Identifier_3 ( Identifier_4 ) . MemberAccess_2 ( ) ; UserDefinedTypeName_1 memory VariableDeclaration_3 = Identifier_5 ( Identifier_6 ) ; uint VariableDeclaration_4 = fee * price . MemberAccess_3 / price . MemberAccess_4 ; uint VariableDeclaration_5 = Identifier_7 * Identifier_8 ; uint VariableDeclaration_6 = Math . MemberAccess_5 ( balances [ Identifier_9 ] [ msg . sender ] , Identifier_10 / 2 ) ; if ( Identifier_11 > 0 ) { balances [ Identifier_12 ] [ msg . sender ] -= Identifier_13 ; Identifier_14 ( Identifier_15 ) . MemberAccess_6 ( Identifier_16 ) ; fee -= Identifier_17 * fee / Identifier_18 ; } Identifier_19 [ Identifier_20 ] [ Identifier_21 ] [ auctionIndex + 1 ] += fee ; } Identifier_22 = amount - fee ; }