function FunctionDefinition_0 ( UserDefinedTypeName_0 memory Parameter_0 , uint _data , uint Parameter_1 ) internal pure returns ( UserDefinedTypeName_1 memory ) { if ( Identifier_0 + Identifier_1 . MemberAccess_0 . length > Identifier_2 . MemberAccess_1 ) { Identifier_3 ( Identifier_4 , max ( Identifier_5 . MemberAccess_2 , Identifier_6 ) * 2 ) ; } uint VariableDeclaration_0 = NumberLiteral_0 ** Identifier_7 - 1 ; assembly { let Identifier_8 := mload ( AssemblyExpression_0 ) let Identifier_9 := mload ( AssemblyExpression_1 ) let Identifier_10 := add ( add ( AssemblyExpression_2 , AssemblyExpression_3 ) , AssemblyExpression_4 ) mstore ( AssemblyExpression_5 , AssemblyExpression_11 ( AssemblyExpression_9 ( mload ( AssemblyExpression_6 ) , AssemblyExpression_8 ( AssemblyExpression_7 ) ) , AssemblyExpression_10 ) ) mstore ( AssemblyExpression_12 , add ( AssemblyExpression_13 , AssemblyExpression_14 ) ) } return Identifier_11 ; }