function FunctionDefinition_0 ( bytes32 Parameter_0 , uint256 Parameter_1 , bytes32 Parameter_2 , bytes Parameter_3 ) internal pure returns ( bool ) { require ( Identifier_0 . length == NumberLiteral_0 , stringLiteral_0 ) ; bytes32 VariableDeclaration_0 ; bytes32 VariableDeclaration_1 = Identifier_1 ; for ( uint256 i = 32 ; i <= NumberLiteral_1 ; i += 32 ) { assembly { Identifier_2 := mload ( add ( AssemblyExpression_0 , AssemblyExpression_1 ) ) } if ( index % 2 == 0 ) { Identifier_3 = keccak256 ( abi . encodePacked ( Identifier_4 , Identifier_5 ) ) ; } else { Identifier_6 = keccak256 ( abi . encodePacked ( Identifier_7 , Identifier_8 ) ) ; } index = index / 2 ; } return Identifier_9 == Identifier_10 ; }