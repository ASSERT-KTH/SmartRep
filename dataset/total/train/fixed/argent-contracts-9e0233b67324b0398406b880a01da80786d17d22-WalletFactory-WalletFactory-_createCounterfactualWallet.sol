function FunctionDefinition_0 ( address _owner , address memory Parameter_0 , string memory Parameter_1 , address Parameter_2 , bytes32 Parameter_3 ) internal { Identifier_0 ( _owner , Identifier_1 , Identifier_2 ) ; bytes32 VariableDeclaration_0 = Identifier_3 ( Identifier_4 , _owner , Identifier_5 , Identifier_6 ) ; bytes memory VariableDeclaration_1 = abi . encodePacked ( type ( Identifier_7 ) . MemberAccess_0 , uint256 ( Identifier_8 ) ) ; address payable VariableDeclaration_2 ; assembly { wallet := AssemblyExpression_3 ( 0 , add ( AssemblyExpression_0 , HexNumber_0 ) , mload ( AssemblyExpression_1 ) , AssemblyExpression_2 ) if AssemblyExpression_6 ( AssemblyExpression_5 ( AssemblyExpression_4 ) ) { AssemblyExpression_8 ( 0 , AssemblyExpression_7 ( ) ) } } Identifier_9 ( Identifier_10 ( wallet ) , _owner , Identifier_11 , Identifier_12 , Identifier_13 ) ; }