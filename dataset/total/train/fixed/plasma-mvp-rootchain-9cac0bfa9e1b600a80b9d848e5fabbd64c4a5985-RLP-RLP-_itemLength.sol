function FunctionDefinition_0 ( uint Parameter_0 ) private pure returns ( uint Parameter_1 ) { uint VariableDeclaration_0 ; assembly { Identifier_0 := AssemblyExpression_1 ( 0 , mload ( AssemblyExpression_0 ) ) } if ( Identifier_1 < Identifier_2 ) Identifier_3 = 1 ; else if ( Identifier_4 < Identifier_5 ) Identifier_6 = Identifier_7 - Identifier_8 + 1 ; else if ( Identifier_9 < Identifier_10 ) { assembly { let Identifier_11 := AssemblyExpression_3 ( AssemblyExpression_2 , HexNumber_0 ) let Identifier_12 := AssemblyExpression_8 ( mload ( add ( AssemblyExpression_4 , DecimalNumber_0 ) ) , AssemblyExpression_7 ( DecimalNumber_1 , AssemblyExpression_6 ( DecimalNumber_2 , AssemblyExpression_5 ) ) ) Identifier_13 := add ( DecimalNumber_3 , add ( AssemblyExpression_9 , AssemblyExpression_10 ) ) } } else if ( Identifier_14 < Identifier_15 ) { Identifier_16 = Identifier_17 - Identifier_18 + 1 ; } else { assembly { let Identifier_19 := AssemblyExpression_12 ( AssemblyExpression_11 , HexNumber_1 ) let Identifier_20 := AssemblyExpression_17 ( mload ( add ( AssemblyExpression_13 , DecimalNumber_4 ) ) , AssemblyExpression_16 ( DecimalNumber_5 , AssemblyExpression_15 ( DecimalNumber_6 , AssemblyExpression_14 ) ) ) Identifier_21 := add ( DecimalNumber_7 , add ( AssemblyExpression_18 , AssemblyExpression_19 ) ) } } }