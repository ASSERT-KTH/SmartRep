function FunctionDefinition_0 ( uint256 Parameter_0 , address Parameter_1 , bytes calldata Parameter_2 , bytes calldata Parameter_3 ) external returns ( bytes memory ) { require ( Identifier_0 [ Identifier_1 ] == false , stringLiteral_0 ) ; bytes32 VariableDeclaration_0 = keccak256 ( abi . encodePacked ( Identifier_2 , Identifier_3 , Identifier_4 , block . MemberAccess_0 ) ) ; require ( Identifier_5 == Identifier_6 . MemberAccess_1 ( ) . MemberAccess_2 ( Identifier_7 ) , stringLiteral_1 ) ; Identifier_8 [ Identifier_9 ] = true ; ( bool VariableDeclaration_1 , bytes memory VariableDeclaration_2 ) = address ( this ) . call ( abi . encodePacked ( Identifier_10 , Identifier_11 ) ) ; if ( success ) { return Identifier_12 ; } if ( Identifier_13 . length > 0 ) { assembly { let Identifier_14 := mload ( AssemblyExpression_0 ) AssemblyExpression_3 ( add ( DecimalNumber_0 , AssemblyExpression_1 ) , AssemblyExpression_2 ) } } else { revert ( stringLiteral_2 ) ; } }