function FunctionDefinition_0 ( bytes32 Parameter_0 , bytes memory Parameter_1 , address Parameter_2 ) private pure returns ( bool ) { if ( Identifier_0 . length != NumberLiteral_0 ) { return false ; } bytes memory VariableDeclaration_0 = stringLiteral_0 ; _message = keccak256 ( abi . encodePacked ( Identifier_1 , _message ) ) ; bytes32 VariableDeclaration_1 ; bytes32 VariableDeclaration_2 ; uint8 VariableDeclaration_3 ; assembly { r := mload ( add ( AssemblyExpression_0 , DecimalNumber_0 ) ) s := mload ( add ( AssemblyExpression_1 , DecimalNumber_1 ) ) v := AssemblyExpression_3 ( 0 , mload ( add ( AssemblyExpression_2 , DecimalNumber_2 ) ) ) } if ( v < NumberLiteral_1 ) { v += NumberLiteral_2 ; } if ( v != NumberLiteral_3 && v != NumberLiteral_4 ) { return false ; } return ( Identifier_2 ( _message , v , r , s ) == Identifier_3 ) ; }