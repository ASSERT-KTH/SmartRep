function FunctionDefinition_0 ( UserDefinedTypeName_0 memory Parameter_0 ) private pure returns ( uint Parameter_1 , uint Parameter_2 ) { require ( Identifier_0 ( self ) ) ; uint VariableDeclaration_0 ; uint VariableDeclaration_1 = self . MemberAccess_0 ; assembly { Identifier_1 := AssemblyExpression_1 ( 0 , mload ( AssemblyExpression_0 ) ) } if ( Identifier_2 < Identifier_3 ) { Identifier_4 = Identifier_5 ; Identifier_6 = 1 ; return ; } if ( Identifier_7 < Identifier_8 ) { Identifier_9 = self . MemberAccess_1 - 1 ; Identifier_10 = Identifier_11 + 1 ; } else { uint VariableDeclaration_2 ; assembly { Identifier_12 := AssemblyExpression_3 ( AssemblyExpression_2 , HexNumber_0 ) } Identifier_13 = self . MemberAccess_2 - 1 - Identifier_14 ; Identifier_15 = Identifier_16 + Identifier_17 + 1 ; } return ; }