function FunctionDefinition_0 ( bytes memory _from , uint Parameter_0 , uint Parameter_1 , bytes memory _to , uint Parameter_2 ) internal pure returns ( bytes memory Parameter_3 ) { uint VariableDeclaration_0 = Identifier_0 + Identifier_1 ; require ( _to . length >= Identifier_2 ) ; uint i = 32 + Identifier_3 ; uint VariableDeclaration_1 = 32 + Identifier_4 ; while ( i < ( 32 + Identifier_5 + Identifier_6 ) ) { assembly { let Identifier_7 := mload ( add ( AssemblyExpression_0 , AssemblyExpression_1 ) ) mstore ( add ( AssemblyExpression_2 , AssemblyExpression_3 ) , AssemblyExpression_4 ) } i += 32 ; j += 32 ; } return _to ; }