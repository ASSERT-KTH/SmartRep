function FunctionDefinition_0 ( uint Parameter_0 , bytes memory Parameter_1 , bytes memory Parameter_2 ) internal pure { uint VariableDeclaration_0 = 32 ; assembly { let Identifier_0 Identifier_1 := mload ( add ( AssemblyExpression_0 , AssemblyExpression_1 ) ) Identifier_2 := add ( AssemblyExpression_3 ( AssemblyExpression_2 , DecimalNumber_0 ) , DecimalNumber_1 ) if AssemblyExpression_6 ( AssemblyExpression_5 ( AssemblyExpression_4 , DecimalNumber_2 ) , 0 ) { Identifier_3 := add ( AssemblyExpression_7 , DecimalNumber_3 ) } for { let index := 0 } AssemblyExpression_10 ( AssemblyExpression_8 , AssemblyExpression_9 ) { index := add ( AssemblyExpression_11 , DecimalNumber_4 ) } { mstore ( add ( AssemblyExpression_12 , AssemblyExpression_14 ( AssemblyExpression_13 , DecimalNumber_5 ) ) , mload ( add ( AssemblyExpression_15 , AssemblyExpression_16 ) ) ) Identifier_4 := AssemblyExpression_18 ( AssemblyExpression_17 , DecimalNumber_6 ) } } }