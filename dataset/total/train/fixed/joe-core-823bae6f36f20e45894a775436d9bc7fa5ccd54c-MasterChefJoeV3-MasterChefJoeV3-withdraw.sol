function withdraw ( uint256 Parameter_0 , uint256 amount ) public nonReentrant { Identifier_0 ( ) ; Identifier_1 ( pid ) ; PoolInfo memory pool = poolInfo [ pid ] ; UserInfo storage user = userInfo [ pid ] [ msg . sender ] ; if ( user . amount > 0 ) { uint256 VariableDeclaration_0 = user . amount . mul ( pool . MemberAccess_0 ) . div ( 1e12 ) . sub ( user . rewardDebt ) ; Identifier_2 . safeTransfer ( msg . sender , pending ) ; emit Identifier_3 ( msg . sender , pid , pending ) ; } user . amount = user . amount . sub ( amount ) ; user . rewardDebt = user . amount . mul ( pool . MemberAccess_1 ) . div ( Identifier_4 ) ; UserDefinedTypeName_0 VariableDeclaration_1 = pool . MemberAccess_2 ; if ( address ( Identifier_5 ) != address ( 0 ) ) { Identifier_6 . MemberAccess_3 ( msg . sender , user . amount ) ; } pool . MemberAccess_4 . safeTransfer ( msg . sender , amount ) ; emit Identifier_7 ( msg . sender , pid , amount ) ; }