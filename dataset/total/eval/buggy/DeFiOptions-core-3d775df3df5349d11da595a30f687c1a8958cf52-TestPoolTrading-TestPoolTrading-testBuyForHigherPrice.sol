function FunctionDefinition_0 ( ) public { Identifier_0 ( ) ; uint VariableDeclaration_0 = Identifier_1 ( ) ; Identifier_2 ( address ( Identifier_3 ) , 10 * Identifier_4 ) ; Identifier_5 . MemberAccess_0 ( address ( Identifier_6 ) , 5 * Identifier_7 ) ; ( uint buyPrice , ) = pool . MemberAccess_1 ( symbol ) ; uint VariableDeclaration_1 = NumberLiteral_0 * Identifier_8 / 10 ; uint VariableDeclaration_2 = Identifier_9 * Identifier_10 / Identifier_11 ; ( bool success , ) = address ( Identifier_12 ) . call ( abi . encodePacked ( Identifier_13 . MemberAccess_2 . selector , abi . encode ( symbol , Identifier_14 * 2 , Identifier_15 ) ) ) ; Assert . MemberAccess_3 ( success , stringLiteral_0 ) ; Assert . equal ( Identifier_16 . balanceOf ( address ( Identifier_17 ) ) , 5 * Identifier_18 - total , stringLiteral_1 ) ; }