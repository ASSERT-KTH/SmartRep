function FunctionDefinition_0 ( UserDefinedTypeName_0 memory Parameter_0 , uint data , uint Parameter_1 ) internal pure returns ( UserDefinedTypeName_1 memory ) { if ( Identifier_0 + buf . MemberAccess_0 . length > buf . MemberAccess_1 ) { Identifier_1 ( buf , max ( buf . MemberAccess_2 , Identifier_2 ) * 2 ) ; } uint VariableDeclaration_0 = NumberLiteral_0 ** Identifier_3 - 1 ; assembly { let Identifier_4 := mload ( AssemblyExpression_0 ) let Identifier_5 := mload ( AssemblyExpression_1 ) let Identifier_6 := add ( add ( AssemblyExpression_2 , AssemblyExpression_3 ) , AssemblyExpression_4 ) mstore ( AssemblyExpression_5 , AssemblyExpression_11 ( AssemblyExpression_9 ( mload ( AssemblyExpression_6 ) , AssemblyExpression_8 ( AssemblyExpression_7 ) ) , AssemblyExpression_10 ) ) mstore ( AssemblyExpression_12 , add ( AssemblyExpression_13 , AssemblyExpression_14 ) ) } return buf ; }