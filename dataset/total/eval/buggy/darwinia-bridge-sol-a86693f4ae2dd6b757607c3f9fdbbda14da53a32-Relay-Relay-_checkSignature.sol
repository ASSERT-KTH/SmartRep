function FunctionDefinition_0 ( bytes32 Parameter_0 , bytes memory Parameter_1 , bytes memory Parameter_2 ) internal view returns ( bool ) { require ( keccak256 ( message ) == hash , stringLiteral_0 ) ; require ( Identifier_0 . length < NumberLiteral_0 , stringLiteral_1 ) ; uint16 VariableDeclaration_0 ; for ( uint16 i = 0 ; i < Identifier_1 . length ; i ++ ) { address VariableDeclaration_1 = Identifier_2 . MemberAccess_0 ( hash , Identifier_3 [ i ] ) ; if ( Identifier_4 ( Identifier_5 ) ) { Identifier_6 ++ ; } } uint8 VariableDeclaration_2 = uint8 ( SafeMath . div ( SafeMath . mul ( uint256 ( Identifier_7 ) , 100 ) , Identifier_8 ( ) ) ) ; return Identifier_9 >= Identifier_10 ( ) ; }