constructor ( address Parameter_0 , IERC20 Parameter_1 , address memory Parameter_2 , address Parameter_3 ) { Identifier_0 = Identifier_1 ( Identifier_2 ) ; want = IERC20 ( Identifier_3 . token ( ) ) ; Identifier_4 = Identifier_5 ; Identifier_6 = 0 ; Identifier_7 = NumberLiteral_0 ; Identifier_8 = 100 ; Identifier_9 = 100 * Identifier_10 ; Identifier_11 = 0 ; Identifier_12 = false ; Identifier_13 ( Identifier_14 , address ( Identifier_15 ) ) ; for ( uint256 i = 0 ; i < Identifier_16 . length ; i ++ ) { require ( Identifier_17 [ i ] != address ( 0 ) , stringLiteral_0 ) ; Identifier_18 ( Identifier_19 , Identifier_20 [ i ] ) ; } Identifier_21 ( Identifier_22 , Identifier_23 ) ; Identifier_24 ( Identifier_25 , Identifier_26 ) ; Identifier_27 ( Identifier_28 , Identifier_29 ) ; want . safeApprove ( address ( Identifier_30 ) , type ( uint256 ) . max ) ; }