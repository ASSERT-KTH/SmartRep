constructor ( address Parameter_0 , IERC20 Parameter_1 , address memory Parameter_2 , address Parameter_3 ) { Identifier_0 = Identifier_1 ( Identifier_2 ) ; want = IERC20 ( Identifier_3 . token ( ) ) ; Identifier_4 = 10 ** ( Identifier_5 ( address ( want ) ) . MemberAccess_0 ( ) ) ; Identifier_6 = Identifier_7 ; Identifier_8 = 0 ; Identifier_9 = NumberLiteral_0 ; Identifier_10 = 100 ; Identifier_11 = 100 * Identifier_12 ; Identifier_13 = 0 ; Identifier_14 = false ; Identifier_15 ( Identifier_16 , address ( Identifier_17 ) ) ; for ( uint256 i = 0 ; i < Identifier_18 . length ; i ++ ) { require ( Identifier_19 [ i ] != address ( 0 ) , stringLiteral_0 ) ; Identifier_20 ( Identifier_21 , Identifier_22 [ i ] ) ; } Identifier_23 ( Identifier_24 , Identifier_25 ) ; Identifier_26 ( Identifier_27 , Identifier_28 ) ; Identifier_29 ( Identifier_30 , Identifier_31 ) ; want . safeApprove ( address ( Identifier_32 ) , type ( uint256 ) . max ) ; }