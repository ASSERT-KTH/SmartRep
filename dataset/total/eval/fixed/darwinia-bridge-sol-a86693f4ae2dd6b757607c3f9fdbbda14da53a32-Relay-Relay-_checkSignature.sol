function FunctionDefinition_0 ( bytes32 Parameter_0 , bytes memory Parameter_1 , bytes memory Parameter_2 ) internal view returns ( bool ) { require ( keccak256 ( message ) == hash , stringLiteral_0 ) ; require ( Identifier_0 . length < NumberLiteral_0 , stringLiteral_1 ) ; uint16 VariableDeclaration_0 ; for ( uint16 i = 0 ; i < Identifier_1 . length ; i ++ ) { address VariableDeclaration_1 = Identifier_2 . MemberAccess_0 ( Identifier_3 . MemberAccess_1 ( hash ) , Identifier_4 [ i ] ) ; if ( Identifier_5 ( Identifier_6 ) ) { Identifier_7 ++ ; } } uint8 VariableDeclaration_2 = uint8 ( SafeMath . div ( SafeMath . mul ( uint256 ( Identifier_8 ) , 100 ) , Identifier_9 ( ) ) ) ; return Identifier_10 >= Identifier_11 ( ) ; }