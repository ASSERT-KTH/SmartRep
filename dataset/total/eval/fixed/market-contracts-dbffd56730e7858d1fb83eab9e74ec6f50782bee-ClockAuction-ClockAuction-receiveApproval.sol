function FunctionDefinition_0 ( address _from , uint256 _tokenId , bytes ) public whenNotPaused { if ( msg . sender == address ( Identifier_0 ) ) { uint256 VariableDeclaration_0 ; uint256 VariableDeclaration_1 ; uint256 VariableDeclaration_2 ; address VariableDeclaration_3 ; assembly { let Identifier_1 := mload ( HexNumber_0 ) AssemblyExpression_2 ( AssemblyExpression_0 , 0 , AssemblyExpression_1 ) Identifier_2 := mload ( add ( AssemblyExpression_3 , DecimalNumber_0 ) ) Identifier_3 := mload ( add ( AssemblyExpression_4 , DecimalNumber_1 ) ) Identifier_4 := mload ( add ( AssemblyExpression_5 , DecimalNumber_2 ) ) Identifier_5 := mload ( add ( AssemblyExpression_6 , DecimalNumber_3 ) ) } require ( Identifier_6 <= NumberLiteral_0 * Identifier_7 && Identifier_8 <= NumberLiteral_1 * Identifier_9 ) ; require ( Identifier_10 <= 1000 days ) ; uint VariableDeclaration_4 = now ; Identifier_11 ( _from , _tokenId , Identifier_12 , Identifier_13 , Identifier_14 , Identifier_15 , Identifier_16 , address ( Identifier_17 ) ) ; } }