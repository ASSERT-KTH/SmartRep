function deposit ( uint256 _amount ) public { PoolInfo storage pool = poolInfo [ 0 ] ; UserInfo storage user = userInfo [ msg . sender ] ; require ( user . amount . add ( _amount ) <= Identifier_0 , stringLiteral_0 ) ; require ( ! user . MemberAccess_0 , stringLiteral_1 ) ; Identifier_1 ( 0 ) ; if ( user . amount > 0 ) { uint256 VariableDeclaration_0 = user . amount . mul ( pool . MemberAccess_1 ) . div ( 1e12 ) . sub ( user . rewardDebt ) ; if ( pending > 0 ) { Identifier_2 . safeTransfer ( address ( msg . sender ) , pending ) ; } } if ( _amount > 0 ) { pool . MemberAccess_2 . safeTransferFrom ( address ( msg . sender ) , address ( this ) , _amount ) ; user . amount = user . amount . add ( _amount ) ; } user . rewardDebt = user . amount . mul ( pool . MemberAccess_3 ) . div ( 1e12 ) ; emit Identifier_3 ( msg . sender , _amount ) ; }